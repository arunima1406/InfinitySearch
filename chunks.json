[
    {
        "source_file": "1_Embedded-product-design-life-cycle.pdf",
        "text_chunks": [
            "embedded systems product development life cycle the waterfall model a linear and sequential software development approach can be applied to embedded systems its characterized by distinct phases like requirements gathering design implementation testing and maintenance with each phase completed before the next begins while suitable for projects with welldefined stable requirements its inflexibility can be a drawback in the dynamic embedded systems landscape heres a more detailed look waterfall model in embedded systems clear and stable requirements the waterfall model works best when the requirements for the embedded system are well understood and unlikely to change significantly during development sequential phases the process flows in a linear fashion moving from one phase to the next such as requirements design implementation testing and deployment focus on documentation the waterfall model emphasizes thorough documentation at each stage which can be helpful for understanding and maintaining the system later suitable for certain projects it is particularly wellsuited for embedded systems with clear specifications high reliability requirements and where changes are difficult or costly to implement examples examples of embedded systems where the waterfall model might be suitable include safetycritical systems industrial control systems and some automotive applications advantages welldefined phases provides a structured",
            "high reliability requirements and where changes are difficult or costly to implement examples examples of embedded systems where the waterfall model might be suitable include safetycritical systems industrial control systems and some automotive applications advantages welldefined phases provides a structured and organized approach to development easy to manage the linear nature of the process makes it easier to track progress and manage resources low risk when requirements are stable if requirements are welldefined and remain stable the risk of latestage changes is minimized high reliability the emphasis on thorough testing can lead to more reliable systems disadvantages inflexible difficult to accommodate changes in requirements once a phase is completed late testing testing is typically performed at the end of the development cycle which can lead to significant rework if issues are found limited customer involvement customer involvement is usually limited to the initial requirements gathering phase not ideal for complex projects may not be suitable for projects with rapidly evolving requirements or complex functionalities alternatives in many embedded system projects particularly those with more complex or evolving requirements alternative development methodologies like agile might be more appropriate agile methodologies emphasize iterative development collaboration and flexibility allowing for changes and adjustments",
            "requirements or complex functionalities alternatives in many embedded system projects particularly those with more complex or evolving requirements alternative development methodologies like agile might be more appropriate agile methodologies emphasize iterative development collaboration and flexibility allowing for changes and adjustments throughout the development process spiral model the spiral model is a riskdriven software development process particularly wellsuited for embedded systems due to its iterative and prototyping approach it combines elements of waterfall and iterative models allowing for risk assessment and prototyping at each stage making it ideal for complex projects with evolving requirements heres why the spiral model is beneficial for embedded systems risk management embedded systems often involve hardwaresoftware integration realtime constraints and specific resource limitations making risk assessment crucial the spiral models iterative nature allows for identifying and mitigating risks early in the development cycle iterative development instead of a linear approach the spiral model allows for repeated cycles of planning risk analysis engineering and evaluation this allows for continuous refinement and adaptation based on testing and feedback prototyping the spiral model supports building prototypes at each iteration enabling developers to validate design choices test functionality and gather user feedback early on which is particularly important in embedded",
            "for continuous refinement and adaptation based on testing and feedback prototyping the spiral model supports building prototypes at each iteration enabling developers to validate design choices test functionality and gather user feedback early on which is particularly important in embedded systems where hardware and software interact adaptability to changing requirements embedded systems often have evolving requirements the spiral models iterative approach allows for incorporating changes and new functionalities throughout the development process ensuring the final product meets the changing needs of the system suitable for complex systems embedded systems can be complex involving intricate hardware and software interactions the spiral models structured approach with risk assessment and prototyping helps manage this complexity effectively in essence the spiral model provides a flexible and riskaware framework for developing embedded systems allowing for continuous improvement and adaptation throughout the development lifecycle"
        ],
        "extracted_images": [
            {
                "image_path": "extracted_images\\1_Embedded-product-design-life-cycle.pdf_p1_i1.jpeg",
                "description": "The diagram illustrates the sequential phases of the Waterfall Model software development lifecycle: requirement analysis, system design, implementation, testing, deployment, and maintenance.\n"
            },
            {
                "image_path": "extracted_images\\1_Embedded-product-design-life-cycle.pdf_p3_i1.jpeg",
                "description": "The diagram illustrates the spiral model of software design, showing iterative development phases from system feasibility to enhanced system."
            }
        ]
    },
    {
        "source_file": "1_Sample-architectures.pdf",
        "text_chunks": [
            "embedded system design architectures abstraction layer samples microwave oven elevatorlift washing machine behaviour model examples microwave oven elevator washing machine"
        ],
        "extracted_images": [
            {
                "image_path": "extracted_images\\1_Sample-architectures.pdf_p1_i1.png",
                "description": "The diagram shows the class diagram of an oven controller system with its components and relationships."
            },
            {
                "image_path": "extracted_images\\1_Sample-architectures.pdf_p1_i2.png",
                "description": "A diagram shows a system controller connected to various input and output devices, including a timer, door, buttons, keypad, sensors, display, buzzer, traction motor control, and floor calculator."
            },
            {
                "image_path": "extracted_images\\1_Sample-architectures.pdf_p2_i1.png",
                "description": "A diagram shows a controller receiving input from buttons, sensors, and a door, and controlling a display, LED, motor, outlet, and inlet."
            },
            {
                "image_path": "extracted_images\\1_Sample-architectures.pdf_p3_i1.jpeg",
                "description": "That's a flowchart depicting a heating process that checks for door status and heating duration before completion.\n"
            },
            {
                "image_path": "extracted_images\\1_Sample-architectures.pdf_p4_i1.jpeg",
                "description": "The image is a sequence diagram illustrating the steps involved in a passenger using a hall call button to request an elevator."
            },
            {
                "image_path": "extracted_images\\1_Sample-architectures.pdf_p4_i2.jpeg",
                "description": "The image is a state diagram illustrating a washing machine's control logic based on sensor readings and timers."
            },
            {
                "image_path": "extracted_images\\1_Sample-architectures.pdf_p5_i1.jpeg",
                "description": "A state diagram visualizes a washing machine's control program using a finite state machine (FSM) in the CSD style."
            }
        ]
    },
    {
        "source_file": "22BEC0807_report.pdf",
        "text_chunks": [
            "vlsi design internship program an industrial internship report 5th june 2024 to 13th july 2024 submitted by chandrima manik 22bec0807 in partial fulfillment for the award of the degree of b tech in electronics and communications engineering 1 2 acknowledgement i am immensely grateful to vellore institute of technology vellore particularly the school of electronics and communication engineering sense for their unwavering support and encouragement in broadening my academic and professional horizons the opportunity to engage in a certification course during my vacation period in 2024 has been an important stage of my practical learning experience the universitys commitment to creating an environment that encourages handson learning exploration and realworld application of theoretical knowledge has been fundamental in my growth i would like to express my sincere gratitude to maven silicon for providing me with the opportunity to undergo the vlsi design internship certification i am also grateful to maven silicon for their help and support i would also like to extend my appreciation to my departments hod dr noor mohammed v for their guidance throughout the internship period 3 certificate 4 sno contents page no 1 introduction 5 2 details about assessments 7 3 detailed description of various modules",
            "to extend my appreciation to my departments hod dr noor mohammed v for their guidance throughout the internship period 3 certificate 4 sno contents page no 1 introduction 5 2 details about assessments 7 3 detailed description of various modules in the course 8 4 software or hardware learnt 10 5 summary 11 5 introduction course objectives the course aimed to provide a comprehensive introduction to digital electronics covering number systems logic circuits and sequential circuits it delved into verilog hdl focusing on data types operators and structured procedures practical experience was given in skills necessary to embark on a career in vlsi design expected outcomes a solid understanding of digital electronics fundamentals including number systems logic circuits and sequential circuits proficiency in verilog hdl and understanding of data types operators and structured procedures for effective design practical experience through handson labs to implement realworld designs such as uart alarm clock spi and vga course aims to equip learners with the necessary skills and knowledge to excel in vlsi design target domain the target domain of the course is digital electronics and vlsi design course syllabus introduction to vlsi o soc design asic design flow digital design o number systems",
            "the necessary skills and knowledge to excel in vlsi design target domain the target domain of the course is digital electronics and vlsi design course syllabus introduction to vlsi o soc design asic design flow digital design o number systems and codes o logic circuits combinational circuits sequential circuits o fsm verilog hdl o introduction o data types o verilog operators o structured procedures spi design o instruction set architecture o architecture design 6 o 5 stage pipelined rtl design registration process course enrollment for vlsi design internship program was done under the guidance of prof jayakumar sadhasivam phd placement coordinator on june 3 2024 7 details about assessments below are the details about the internal and external assessments conducted during the course internal assessments o knowledge check introduction to vlsi o knowledge check number systems and codes o knowledge check logic circuits o knowledge check combinational circuits o knowledge check sequential circuits o knowledge check fsm o knowledge check combinational circuits o knowledge check introduction to verilog hdl o knowledge check data types o knowledge check operators o knowledge check synthesis coding style external assessments o final test riscv design 8 detailed description of various modules in the course",
            "combinational circuits o knowledge check introduction to verilog hdl o knowledge check data types o knowledge check operators o knowledge check synthesis coding style external assessments o final test riscv design 8 detailed description of various modules in the course week 1 the initial week of the internship provided a strong foundation in the fundamentals of vlsi design and digital electronics i learnt about systemonchip soc architecture which shed light on components like cpus gpus memory units and inputoutput controllers within a single chip this understanding is crucial for designing efficient and powerful integrated circuits i also learnt about the vlsi design flow from the initial conceptualization of a circuit to its final physical realization and everything in between this involved a systematic approach encompassing tasks such as system specification architectural design logic design circuit synthesis and physical design the importance of balancing performance power consumption and area constraints was emphasized throughout the process to gain understanding of the hardware design the core concepts of digital electronics were revisited binary number systems the building blocks of digital circuits were thoroughly studied along with boolean algebra the understanding of logic gates the fundamental building blocks of digital circuits were reinforced laying",
            "design the core concepts of digital electronics were revisited binary number systems the building blocks of digital circuits were thoroughly studied along with boolean algebra the understanding of logic gates the fundamental building blocks of digital circuits were reinforced laying the groundwork for more complex circuit designs further week 2 building on the foundation laid in the first week the second week delved into the design and analysis of combinational and sequential circuits combinational circuits are those whose outputs depend solely on their current inputs they were studied in detail this included the design and implementation of essential components like adders subtractors multiplexers and decoders understanding the behaviour and optimization techniques for these circuits is vital for efficient digital system design sequential circuits which incorporate memory elements to store information and exhibit state dependent behaviour were the focus further on flipflops and latches the fundamental building blocks of sequential circuits were studied in depth the concept of state machines a powerful abstraction for modeling sequential behaviour was introduced this laid the groundwork for designing complex digital systems that can perform various tasks based on a sequence of inputs and internal states week 3 in the third week we moved from",
            "powerful abstraction for modeling sequential behaviour was introduced this laid the groundwork for designing complex digital systems that can perform various tasks based on a sequence of inputs and internal states week 3 in the third week we moved from theoretical concepts to practical implementation verilog hdl a hardware description language widely used in the industry was introduced as a tool for modeling and designing digital systems the syntax data types operators and structured procedures of verilog were explored enabling the description of hardware at various levels of abstraction from gatelevel to behavioural level the concept of finite state machines fsms was revisited and their implementation in verilog was demonstrated fsms are essential for designing sequential circuits that exhibit specific 9 behaviours such as controllers protocol interfaces and data processing units by mastering fsm design it becomes possible to create complex digital systems that can respond to various input conditions and execute specific tasks i was introduced to synthesis and optimization techniques synthesis is the process of translating a highlevel design description into a physical implementation optimization techniques are employed to improve the performance power consumption and area of the synthesized circuit by understanding these concepts designers can create efficient",
            "optimization techniques synthesis is the process of translating a highlevel design description into a physical implementation optimization techniques are employed to improve the performance power consumption and area of the synthesized circuit by understanding these concepts designers can create efficient and cost effective digital systems week 4 the fourth week of the internship focused on consolidating the theoretical knowledge gained thus far and applying it to practical design scenarios a comprehensive test was conducted to assess understanding of verilog hdl digital electronics finite state machines and synthesis techniques this evaluation served as a valuable tool for identifying areas of strength and weakness and for reinforcing key concepts to further solidify the theoretical understanding handson laboratory sessions were conducted these labs provided an opportunity to implement various digital circuits including adders arithmetic logic units alus multiplexers flipflops ram and finite state machines by working on these practical projects the ability to translate theoretical knowledge into functional hardware designs was enhanced the quartus prime software was extensively used to simulate and verify the functionality of the designed circuits this involved writing testbenches to generate input stimuli monitor output responses and compare the results against expected behaviour week 5 in the final week",
            "quartus prime software was extensively used to simulate and verify the functionality of the designed circuits this involved writing testbenches to generate input stimuli monitor output responses and compare the results against expected behaviour week 5 in the final week of the internship the focus was on the design and implementation of a riscv processor module riscv an open standard instruction set architecture isa is increasingly popular for applications requiring a flexible lowpower and highperformance processor design key riscv concepts including the instruction fetch decode execute stages and handling of registers and control signals were studied in detail to ensure correct processor functioning the architecture of the riscv module was designed to incorporate a fivestage pipeline with each stage managed by finite state machines for instruction flow control and hazard handling verilog hdl was used to implement the core functionalities of the riscv processor focusing on efficient resource utilization and adherence to riscv specifications to validate the processor module testbenches were developed to simulate instruction execution and check the interactions between pipeline stages this final project demonstrated the ability to apply the acquired knowledge and skills to design and implement a complex digital system completing the final project not only",
            "were developed to simulate instruction execution and check the interactions between pipeline stages this final project demonstrated the ability to apply the acquired knowledge and skills to design and implement a complex digital system completing the final project not only required the understanding of the course material provided but also further research from multiple sources and practical understanding of existing projects in the same domain of vlsi 10 software or hardware learntobserved 1 page with screenshots if available modelsim mentors modelsim is the best hdl language simulation software on the market it is the industrys first singlecore simulator that supports vhdl and verilog mixed simulation and can provide a nice simulation environment it makes use of singlecore simulation technology tcltk technology and directly optimised compilation technology the compilation simulation is quick and the produced code is platform agnostic its simple to secure the ip core create a personalised graphical and user interface and speed up debugging for users is the first choice of simulation software for fpgaasic design because it provides a powerful means simulation example of arithmetic type instructions consider the following instructions loaded into the instruction memory from position 0 the instructions are executed in a pipeline fashion",
            "first choice of simulation software for fpgaasic design because it provides a powerful means simulation example of arithmetic type instructions consider the following instructions loaded into the instruction memory from position 0 the instructions are executed in a pipeline fashion as shown using modelsim in the figure below eg add r1r4r6 sub r2r6r4 fig 53 simulation example of arithmetic type instructions first the contents of r4 and r6 is fetched and added then stored into r1 at the same time in the continuing cycle the hardware is used paralleled by the next instruction to fetch r6 and r4 values and subtracted then stored into r2 11 summary the vlsi design course significantly upgraded my skills by providing a strong foundation in digital design and hardware description languages like verilog handson labs and projects reinforced my understanding of circuit design synthesis and verification processes the course deepened my technical knowledge and equipped me with practical skills essential for realworld applications preparing me well for industry demands 12",
            "me well for industry demands 12"
        ],
        "extracted_images": [
            {
                "image_path": "extracted_images\\22BEC0807_report.pdf_p1_i1.jpeg",
                "description": "The image is the logo for the Vellore Institute of Technology (VIT)."
            },
            {
                "image_path": "extracted_images\\22BEC0807_report.pdf_p4_i1.jpeg",
                "description": "This is a certificate of completion for Chandrima Manik's VLSI Design Internship at Maven Silicon from June 5th to July 13th, 2024."
            },
            {
                "image_path": "extracted_images\\22BEC0807_report.pdf_p11_i1.jpeg",
                "description": "A screenshot shows a digital logic simulator displaying multiple waveforms and binary data, representing the execution of a RISC-V processor."
            }
        ]
    },
    {
        "source_file": "sample.pdf",
        "text_chunks": [
            "chandrima manik vellore tn linkedin 919483050465 chandrimamanikgmailcom education vellore institute of technology vellore tn b tech in electronics and communication engineering cgpa 879 2026 vyasa international school bengaluru ka class 12 math physics chemistry biology english 80 2022 atomic energy central school mysore mysuru ka class 10 932 2020 projects greenintel autonomous weed detection and control robot feb25 technologies used tensorflow python c verilog fpga programming robotics developed and implemented state machinebased movement algorithms on fpga cyclone iv e for realtime weed detection integrated mobilenetv2 9923 accuracy to enable precise robotic control achieved seamless coordination of four robotic arms across diverse terrains optimizing efficiency and accuracy in automated weed eradication work experience google developers student club vit vellore core committee member apr23 present designed and contributed to the development of websites for devjams hexathon and women techies events and was a part of the organizing committee led the product design for vitty and ffwriter enhancing user experience and development through impactful visual communication and creative design gravitas24 vit vellore design and merch team sept24 participated in the making of the official website for gravitas along with the merchandise contributing to the success of the tech fest increased visitors on website",
            "impactful visual communication and creative design gravitas24 vit vellore design and merch team sept24 participated in the making of the official website for gravitas along with the merchandise contributing to the success of the tech fest increased visitors on website by over 1050 yoy with 400000 visitors riviera24 vit vellore tech team sales team oct23 mar24 designed the website and app increased visitors on website by over 1200 yoy with 800000 visitors created marketing assets for the event drove sales efforts as a pivotal member of the riviera sales team achievements winner 2nd place electrohack yantra25 feb24 vlsi design maven silicon riscv isa rv32i rtl design may24 june24 leadership experience atomic energy central school student council mysuru ka cocurricular activities captain apr19 apr20 led the planning and execution of cocurricular activities for a school of around 400 students enhancing student engagement by over 150 skills interests skills cadence virtuoso quartus prime fpga awr matlab multisim modelsim c python java verilog keil vision figma adobe illustrator procreate languages english fluent japanese beginner hindi fluent bengali fluent kannada intermediate",
            "keil vision figma adobe illustrator procreate languages english fluent japanese beginner hindi fluent bengali fluent kannada intermediate"
        ],
        "extracted_images": []
    },
    {
        "source_file": "A Novel Approximate Adder Design Using Error Reduced Carry Prediction and Constant Truncation.docx",
        "text_chunks": [
            "a novel approximate adder design using error reduced carry prediction and constant truncation carry prediction technique can reduce a prediction error rate by up to 75 compared to existing approximate adders enhances the overall computation accuracy by decreasing the error distance ed improves the nmed by 914 and mred by 989 957 911 and 932 reductions of the powernmed energynmed and areadelay product adpnmed power energy and adpmred products by up to 994 figure of merit 9305 smaller core concept approximate adder that improves computational accuracy with minimum hardware errorreduced carry prediction ercp constant truncation with error reduction setting lsb to constant reduces power area minimizing errors working approximate full adder cells so in lsb theyve used appx fa cells instead of exact fa theyve replaced xor with or in sum and eliminated cin from carry si ai bi ci1 ci ai bi removing the carry propagation chain greatly reduces delay and power consumption but it also introduces a lot of errors so in msb of this xor is used and lsb or is used proposed carry prediction technique accurate part needs a carry from the inaccurate part so we use simple logic gates to produce carry traditional and based",
            "of errors so in msb of this xor is used and lsb or is used proposed carry prediction technique accurate part needs a carry from the inaccurate part so we use simple logic gates to produce carry traditional and based prediction scheme carry input production cin amsb bmsb and operation most significant bits of the inaccurate part if both bits are 1 a carry is generated otherwise no carry is predicted limitation a carry may come from lowerorder bits error rate 25 proposed andor is even more accurate and efficient at the expense of only 2 extra gates so here what it does is adds a and b takes carry from 1st msb which is cnk1 carry from second msb cnk2 and pnk1 is the propagation bit calculated by xor first two bits here cnk1 0 cnk2 0 pnk1 0 xor 1 1 using the formula cin 001 0 here cnk1 0 cnk2 1 pnk1 0 xor 1 1 using the formula cin 011 1 for 2 bits error is reduced to 123 hardware one xor three and and one or gates are required to generate the carry input cin xor p bit 2 and c bits 1 and pc",
            "the formula cin 011 1 for 2 bits error is reduced to 123 hardware one xor three and and one or gates are required to generate the carry input cin xor p bit 2 and c bits 1 and pc 1 or final since carry prediction is achieved using the inputs of the two msb positions it is correct when a carry is generated from any of these two bit positions limitation if lower bits have carry then error increases to calculate this error constant truncation with error reduction constant 1 truncation when no carry lsb of the inaccurate part is set to 1 constant 0 truncation when carry is generated from n k 2th bit and propagated to n k 2th bit error reduction is performed basically error reduction is done when pnk1cnk2 1 for eg in fig4b the correct output of nk1 bit should be 0 but its 1 so our output is larger than the actual output so to reduce error all the other bits are forced to 0 this reduces error from 211 to 84 basically reduces error distance error rate analysis the error rate of the proposed adder is the probability of the complement of",
            "so to reduce error all the other bits are forced to 0 this reduces error from 211 to 84 basically reduces error distance error rate analysis the error rate of the proposed adder is the probability of the complement of the event therefore the error rate erercpaa is given by experimental results and comparison experiment setup and evaluation to examine hardware characteristics of the proposed approximate adder in terms of area delay power and energy used a 16bit adder using an 8bit rcabased precise adder analyzed hardware and error char used 10 million input pairs tradeoff analysis the area power and energy performance degrade design parameter l decreases because smaller l more logic gates however as l decreases the overall computation accuracy performance improves tradeoff between hardware and cost hardware efficiency areadelay product adp 932 reduction in adpnmed product nmed 914 mred 989 no carry prediction loawa etai 50 andbased carry prediction loa cpeta 25 proposed ercp method 123 realworld applications and validation digital image processing gaussian smoothing 1264db increase machine learning kmeans clustering 378 improvement compressor based hybrid approximate multiplier architectures with efficient error correction logic",
            "applications and validation digital image processing gaussian smoothing 1264db increase machine learning kmeans clustering 378 improvement compressor based hybrid approximate multiplier architectures with efficient error correction logic"
        ],
        "extracted_images": [
            {
                "image_path": "extracted_images\\A Novel Approximate Adder Design Using Error Reduced Carry Prediction and Constant Truncation.docx_i1.png",
                "description": "The diagram illustrates an error reduction technique in binary addition by separating the accurate and inaccurate parts of the sum and correcting the inaccurate part."
            },
            {
                "image_path": "extracted_images\\A Novel Approximate Adder Design Using Error Reduced Carry Prediction and Constant Truncation.docx_i4.png",
                "description": "The diagram illustrates a binary addition with an accurate and inaccurate part, highlighting the propagation of errors in the least significant bits (LSBs)."
            },
            {
                "image_path": "extracted_images\\A Novel Approximate Adder Design Using Error Reduced Carry Prediction and Constant Truncation.docx_i8.png",
                "description": "The equation shows a recursive formula for calculating Cin."
            },
            {
                "image_path": "extracted_images\\A Novel Approximate Adder Design Using Error Reduced Carry Prediction and Constant Truncation.docx_i9.png",
                "description": "The bar chart displays the carry prediction error rates of ten different algorithms, with ERCPAA showing a significantly lower rate than the others."
            },
            {
                "image_path": "extracted_images\\A Novel Approximate Adder Design Using Error Reduced Carry Prediction and Constant Truncation.docx_i10.png",
                "description": "The image shows an equation where P<sub>i</sub> is defined as the direct sum of A<sub>i</sub> and B<sub>i</sub>."
            },
            {
                "image_path": "extracted_images\\A Novel Approximate Adder Design Using Error Reduced Carry Prediction and Constant Truncation.docx_i11.png",
                "description": "The image shows a formula for ERERCPAA(n, k, l) as a function of n, k, and l, expressed as 1 minus the probability of an event Eco."
            },
            {
                "image_path": "extracted_images\\A Novel Approximate Adder Design Using Error Reduced Carry Prediction and Constant Truncation.docx_i13.png",
                "description": "The image shows a mathematical derivation of the expression for ERCP(n,k) based on the independence of  Pn-k-1, Pn-k-2, and Eca."
            }
        ]
    },
    {
        "source_file": "material_requirements.xlsx",
        "text_chunks": [
            "raw material unit current quantity b bread red cow bbrc s bread modern sbm laccha bun lb sweet bun sb cream bun cb pizza pz total consumption closing quantity maida kg 1001 2000 324 2376 75 966 135 57545 0 atta kg 10000 1000 1000 9000 sugar kg 10000 240 224 220 165 184 0432 683332 9316668 salt kg 10000 48 56 14520000000000001 102 115 023 8087 991913 yeast kg 10000 100 96 44 3 2875 1 18635 981365 soya flour kg 10000 15 224 22 1944 998056 calcium proprinate 1000 15 224 5720000000000001 039 368 0095 27125 972875 vital gluten 10000 16 32 22 012 11500000000000001 027 22939999999999998 997706 vegetable fat 10000 256 1128 072 23000000000000003 14142000000000002 985858 palm oil 1000 40 4 44 3 034 9134 90866 acetic acid 1000 28000000000000003 028 308 99692 cardamon flavour 1000 11 11 9989 vanilla powder 1000 20999999999999996 11500000000000001 325 99675 bread improver 1000 17999999999999998 016 0572 0045 0184 0013 27739999999999996 997226 caramel colour 1000 8 8 992 coconut powder 1000 33 33 967 tutti frutti 1000 572 572 9428 muraba 1000 3 3 997 finamul 90 1000 3 032 004 336 99664 cream 1000 44 44 956 sorbic acid 1000 392",
            "caramel colour 1000 8 8 992 coconut powder 1000 33 33 967 tutti frutti 1000 572 572 9428 muraba 1000 3 3 997 finamul 90 1000 3 032 004 336 99664 cream 1000 44 44 956 sorbic acid 1000 392 0416 0018 4354 995646 fumeric acid 1000 32 032 0013 3533 996467 ammonium chloride 1000 12 0128 13279999999999998 998672 200gm pouch 1000 172 172 828 400 gm pouch 1000 112 112 888 mask 1000 180 180 820 surgical cap 1000 240 240 760 hand gloves 1000 80 16 96 904 slice blade 1000 120 12 132 868 seal tape 1000 40 40 960"
        ],
        "extracted_images": []
    },
    {
        "source_file": "25SPF21VIT_2nd_Monthly_Connect.pptx",
        "text_chunks": [
            "worklet name hybrid batch and streaming solutions worklet details worklet id 25spf21vit college name vit vellore next steps integrate apache kafka for ingestion define input sources for batch historical and streaming realtime confirm use of apache spark 3x for structured streaming batch kpis achieved till now completed comparison of lambda vs kappa understood architecture of lambda reviewed spark kafka integration feasibility key achievements outcome till now chosen apache spark 3x kafka as primary stack outlined hybrid system design settled on lambda architecture due to it supporting both streaming and batch processing any challenges issues faced balancing latency and throughput in hybrid design evaluating faulttolerance for both modes ensuring scalability of chosen architecture date aug 2025 worklet name hybrid batch and streaming solutions worklet details any anticipated break due to exams etc gravitas september 2628 resource requirement identified with status apache spark 3x college systems personal laptops apache kafka cluster setup local possible cloud support no gpu requirement at this stage data collection information using opensource streaming datasets eg simulated iot data logs batch datasets from public repositories kagglebig data repos httpsgithubecodesamsungcomsribprismvit25spf21vithybridbatchandstreamingsolutions github repository link and prism portal registration status date aug 2025 worklet id 25spf21vit college name vit vellore worklet",
            "data collection information using opensource streaming datasets eg simulated iot data logs batch datasets from public repositories kagglebig data repos httpsgithubecodesamsungcomsribprismvit25spf21vithybridbatchandstreamingsolutions github repository link and prism portal registration status date aug 2025 worklet id 25spf21vit college name vit vellore worklet name hybrid batch and streaming solutions worklet details professor comments to be filled in and presented by professor either date aug 2025 computation resource details language scala running on the java jdk processing engine apache spark using spark sql structured streaming data pipeline apache kafka ide intellij idea with the scala plugin build tool sbt infrastructure docker desktop worklet id 25spf21vit college name vit vellore"
        ],
        "extracted_images": [
            {
                "image_path": "extracted_images\\25SPF21VIT_2nd_Monthly_Connect.pptx_s1.png",
                "description": "That's the logo for Samsung's PRISM, a program for inspiring Silicon Valley startups.\n"
            },
            {
                "image_path": "extracted_images\\25SPF21VIT_2nd_Monthly_Connect.pptx_s2.png",
                "description": "That's the logo for Samsung PRISM, a program for inspiring Silicon Valley minds.\n"
            },
            {
                "image_path": "extracted_images\\25SPF21VIT_2nd_Monthly_Connect.pptx_s3.png",
                "description": "That's the logo for Samsung's PRISM, a program for inspiring Silicon Valley startups.\n"
            }
        ]
    }
]